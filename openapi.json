{"openapi":"3.1.0","info":{"title":"Nano Helix API","description":"Protein AI model API platform.","contact":{"name":"Nano Helix Support","email":"support@nanohelix.ai"},"license":{"name":"Commercial License"},"version":"1.0.0"},"paths":{"/health":{"get":{"tags":["System"],"summary":"Health Check","description":"Check API health and connectivity.\n\nReturns basic system status and organization information for authenticated requests.","operationId":"health_health_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/upload/{filename}":{"put":{"tags":["File Management"],"summary":"Generate Upload URL","description":"Generate presigned upload URL for file upload.\n\nThis endpoint returns a presigned URL that clients can use to upload files directly\nto the storage backend, avoiding the need to stream through the control plane.\n\n**Parameters:**\n- **filename**: Name of the file to upload\n- **folder**: Optional folder path to organize files\n\n**Returns:**\n- Presigned upload URL with instructions\n- Download URL for later access\n- File metadata and upload guidelines","operationId":"upload_file_upload__filename__put","parameters":[{"name":"filename","in":"path","required":true,"schema":{"type":"string","title":"Filename"}},{"name":"folder","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Folder"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/submit-job":{"post":{"tags":["Job Management"],"summary":"Submit Job","description":"Submit a new simulation job for processing.\n\nCreates a new job with the specified algorithm and settings, then queues it for execution\non the appropriate runner infrastructure.\n\n**Workflow:**\n1. Validates job name uniqueness and algorithm availability\n2. Generates algorithm-specific configuration files\n3. Uploads configuration to secure storage\n4. Submits job to the appropriate algorithm runner\n5. Returns job status and tracking information\n\n**Supported Algorithms:**\n- `boltz`: Protein structure prediction\n- `rfdiffusion`: Protein design and generation\n- `alphafold`: Advanced structure prediction\n\n**Request Body:**\n```json\n{\n    \"jobName\": \"my-protein-job\",\n    \"type\": \"boltz\",\n    \"settings\": {\n        \"sequences\": [\"MKLLVL...\"],\n        \"steps\": 200\n    },\n    \"version\": \"2.1.1\"\n}\n```","operationId":"submit_job_submit_job_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/files":{"get":{"tags":["File Management"],"summary":"List Files","description":"List uploaded files for your organization.\n\nReturns a paginated list of files that have been uploaded to your organization's storage,\nwith optional filtering by folder path.\n\n**Query Parameters:**\n- **limit**: Maximum number of files to return (default: 50, max: 100)\n- **folder**: Filter files by folder path (e.g., \"proteins/structures\")\n\n**Response includes:**\n- File metadata (name, size, upload date)\n- File status and content type\n- Organization and folder information","operationId":"list_files_files_get","parameters":[{"name":"limit","in":"query","required":false,"schema":{"type":"integer","default":50,"title":"Limit"}},{"name":"folder","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Folder"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/jobs":{"get":{"tags":["Job Management"],"summary":"List Jobs","description":"List and filter jobs for your organization.\n\nReturns a paginated list of molecular simulation jobs with comprehensive filtering options.\nUse this endpoint to track job progress, retrieve results, and manage your computational workloads.\n\n**Common Use Cases:**\n- Monitor job status and progress\n- Filter jobs by algorithm type or batch\n- Paginate through large job lists\n- Find specific jobs by name or user\n\n**Job Statuses:**\n- `QUEUED`: Job accepted and waiting for resources\n- `RUNNING`: Job currently executing\n- `COMPLETED`: Job finished successfully\n- `FAILED`: Job encountered an error\n\n**Response includes:**\n- Job metadata and current status\n- Algorithm type and version\n- Execution timestamps and metrics\n- Pagination information for large result sets","operationId":"get_jobs_jobs_get","parameters":[{"name":"jobName","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by specific job name","title":"Jobname"},"description":"Filter by specific job name"},{"name":"limit","in":"query","required":false,"schema":{"type":"integer","maximum":100,"minimum":1,"description":"Maximum number of jobs to return","default":50,"title":"Limit"},"description":"Maximum number of jobs to return"},{"name":"startKey","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Pagination cursor for next page","title":"Startkey"},"description":"Pagination cursor for next page"},{"name":"batch","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by batch ID","title":"Batch"},"description":"Filter by batch ID"},{"name":"organization","in":"query","required":false,"schema":{"type":"boolean","description":"Return all jobs in organization","default":false,"title":"Organization"},"description":"Return all jobs in organization"},{"name":"includeSubjobs","in":"query","required":false,"schema":{"type":"boolean","description":"Include subjob details","default":false,"title":"Includesubjobs"},"description":"Include subjob details"},{"name":"jobEmail","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by user email","title":"Jobemail"},"description":"Filter by user email"},{"name":"algorithm","in":"query","required":false,"schema":{"anyOf":[{"type":"string"},{"type":"null"}],"description":"Filter by algorithm type (e.g., 'boltz', 'rfdiffusion')","title":"Algorithm"},"description":"Filter by algorithm type (e.g., 'boltz', 'rfdiffusion')"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/algorithms":{"get":{"tags":["Discovery"],"summary":"List Available Algorithms","description":"Get available molecular simulation algorithms for your organization.\n\nReturns a comprehensive list of algorithms that your organization has access to,\nincluding version information, resource limits, and configuration details.\n\n**Algorithm Types:**\n- **Boltz**: Fast protein structure prediction\n- **RF-Diffusion**: Protein design and generation\n- **AlphaFold**: High-accuracy structure prediction\n- **ProteinMPNN**: Protein sequence design\n\n**Response includes:**\n- Algorithm name and version\n- Resource limits and concurrency settings\n- Configuration requirements\n- Current availability status\n\nUse this endpoint to discover which algorithms are available before submitting jobs.","operationId":"get_algorithms_algorithms_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/result":{"post":{"tags":["Job Management"],"summary":"Get Job Results","description":"Retrieve download URLs for completed job results.\n\nReturns secure, time-limited download URLs for job output files. Only works for\njobs with `COMPLETED` status.\n\n**Request Body:**\n```json\n{\n    \"jobName\": \"my-protein-job\",\n    \"fileName\": \"results.zip\"  // optional: specific file\n}\n```\n\n**Response:**\n- Presigned download URL (expires in 1 hour)\n- File metadata and type information\n- Job completion status\n\n**Common Result Files:**\n- `results.zip`: Complete output archive\n- `structure.pdb`: Predicted protein structure\n- `confidence.json`: Prediction confidence scores\n- `log.txt`: Execution logs and metrics","operationId":"result_result_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/upload/{file_id}/complete":{"post":{"tags":["File Management"],"summary":"Complete File Upload","description":"Mark a file upload as complete and update metadata.\n\nCall this endpoint after successfully uploading a file using the presigned URL\nfrom the `/upload/{filename}` endpoint to finalize the upload process.\n\n**Parameters:**\n- **file_id**: The file ID returned from the initial upload request\n\n**Optional Request Body:**\n```json\n{\n    \"size\": 1048576  // File size in bytes\n}\n```\n\n**Response:**\n- Upload completion status\n- Final file metadata\n- Upload timestamp","operationId":"complete_upload_upload__file_id__complete_post","parameters":[{"name":"file_id","in":"path","required":true,"schema":{"type":"string","title":"File Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}